{"version":3,"sources":["src/app.ts","src/environment.ts","src/lazy-loaded.ts","src/main.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;IAMA;QAGE,aAAsC,UAA4B;YAAlE,iBAEC;YAFqC,eAAU,GAAV,UAAU,CAAkB;YAFlE,YAAO,GAAG,cAAc,CAAC;YAGvB,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,EAAE,EAAb,CAAa,EAAE,GAAG,CAAC,CAAA;QACtC,CAAC;QAEO,oBAAM,GAAd;YACE,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,IAAI,CAAC,UAAU,EAAE,CAAC,GAAG,EAAE,CAAC;QAC1B,CAAC;QAVU,GAAG;YADf,yCAAU;YAII,WAAA,mCAAI,CAAC,wBAAU,CAAC,CAAA;;WAHlB,GAAG,CAWf;QAAD,UAAC;KAXD,AAWC,IAAA;IAXY,kBAAG;;;;;;;;ICNhB,kBAAe;QACb,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI;KACd,CAAC;;;;;;;;ICHF;QAAA;QAIA,CAAC;QAHC,wBAAG,GAAH;YACE,KAAK,CAAC,KAAK,CAAC,CAAC;QACf,CAAC;QACH,iBAAC;IAAD,CAJA,AAIC,IAAA;IAJY,gCAAU;;;;;;;;ICGvB,mBAA0B,OAAgB;QACxC,OAAO,CAAC,GAAG;aACR,qBAAqB,EAAE,CAAC;QAE3B,EAAE,CAAC,CAAC,qBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;QACnC,CAAC;QAED,EAAE,CAAC,CAAC,qBAAW,CAAC,OAAO,CAAC,CAAC,CAAC;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;QACxC,CAAC;QAED,OAAO,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,cAAM,OAAA,OAAO,CAAC,OAAO,EAAE,EAAjB,CAAiB,CAAC,CAAC;IAChD,CAAC;IAbD,8BAaC","file":"app-bundle.js","sourcesContent":["import {LazyLoaded} from \"./lazy-loaded\";\nimport {autoinject, lazy, inject, Lazy} from \"aurelia-dependency-injection\";\n\n\n// @inject(Lazy.of(LazyLoaded)) // this works\n@autoinject                     // this doesn't\nexport class App {\n  message = 'Hello World!';\n\n  constructor(@lazy(LazyLoaded) private lazyLoaded: () => LazyLoaded) {\n    setTimeout(() => this.beLazy(), 300)\n  }\n\n  private beLazy() {\n    console.log(\"I'm lazy!\");\n    this.lazyLoaded().foo();\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","export class LazyLoaded {\n  foo() {\n    alert('foo');\n  }\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration();\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n"],"sourceRoot":".."}